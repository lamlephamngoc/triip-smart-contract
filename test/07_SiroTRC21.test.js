// "0xF0187348678403ED9457B1B3dF316f2eD384463a","0x68235e990ec444E1247c0Bf236CdebEC75051Ffb","0x9eda1F9783adB23eC8d52525C7117Cd210DdAfDc","0x235AC69192a21952949358126177Fa4bb86e0184","0x7c240374515fbfd6a2448D7d720635028f7a822E","0xC320a067133695D9a10499d621314b8B116A5c5e","0x6550a3C13c02c9e7EFa0571813aE53714E8B866B"

const SIROToken = artifacts.require('SIROToken')


const {
  MILLION,
  UNIT,
  TRANSFER_GAS,
  TOTAL_SUPPLY,
  increaseTime,
  sendEth,
  duration
} = require('../lib/utils')

let SIRO

let COMMUNITY_WALLET
let CROWD_FUNDING_WALLET
let ECO_WALLET
let COMPANY_WALLET
let TEAM_WALLET
let FOUNDER_WALLET
let TOMO_ALLOCATION_WALLET
let FEE

contract('SIROToken', accounts => {
  
  beforeEach('SIRO Token init', async () => {
    
    COMMUNITY_WALLET = accounts[0]
    CROWD_FUNDING_WALLET = accounts[1]
    ECO_WALLET = accounts[2]
    COMPANY_WALLET = accounts[3]
    TEAM_WALLET = accounts[4]
    FOUNDER_WALLET = accounts[5]
    TOMO_ALLOCATION_WALLET = accounts[6]
    FEE = 3

    SIRO = await SIROToken.new(
      COMMUNITY_WALLET, 
      CROWD_FUNDING_WALLET, 
      ECO_WALLET, 
      COMPANY_WALLET, 
      TEAM_WALLET, 
      FOUNDER_WALLET,
      TOMO_ALLOCATION_WALLET,
      FEE
      )

  })
})
  